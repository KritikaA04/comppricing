public async Task<bool> CheckIsBookingAlreadyCancelled(int transactionId) => await Task.Run(async () =>
{
    _logger.LogInformation("CancellationHelper : CheckIsBookingAlreadyCancelled : Method Start () TransactionId : {transactionId}", transactionId);
    var isAlreadyCancelled = false;
    try
    {
        var cxTxnDetails = await _dTTransactionCancelledRepository.GetCancelledTransactionDetails(transactionId);
        isAlreadyCancelled = cxTxnDetails != null && cxTxnDetails.Any();
        if (!isAlreadyCancelled)
        {
            var txnDetails = await _oapCancelTransactionHelper.GetByTransactionId(transactionId);
            if (txnDetails != null && txnDetails.Any())
            {
                var filteredTxn = txnDetails?.FindAll(I => (I?.TransactionStatus == (int)OAPTransactionStatus.INPROGRESS || I?.TransactionStatus == (int)OAPTransactionStatus.COMPLETED || I?.TransactionStatus == (int)OAPTransactionStatus.PENDING) && I?.TransactiontypeID == (int)OAPTransactionType.Cancellation);
                if (filteredTxn != null && filteredTxn.Any())
                {
                    foreach (var txn in filteredTxn)
                    {
                        var taskDetails = await _oapCancelTaskHelper.GetTaskDetailsByOapSubTaskID((txn?.OAPTransactionID ?? 0), (int)CancelTxnTaskOapSubTaskId.Cancel_Booking);
                        isAlreadyCancelled = taskDetails != null && taskDetails.Status == (int)OAPTransactionStatus.COMPLETED;
                        if (isAlreadyCancelled)
                        {
                            break;
                        }
                    }
                }
            }
        }
    }
    catch (Exception ex)
    {
        _logger.LogError(ex, "CancellationHelper : CheckIsBookingAlreadyCancelled : Exception:- {ex.Message} , {ex.StackTrace}", ex.Message, ex.StackTrace);
    }
    _logger.LogInformation("CancellationHelper : CheckIsBookingAlreadyCancelled : Method END () TransactionId : {transactionId}, IsAlreadyCancelled : {isAlreadyCancelled}", transactionId, isAlreadyCancelled);
    return isAlreadyCancelled;
});
